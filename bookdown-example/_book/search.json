[{"path":"index.html","id":"rap-workshop","chapter":"1 RAP Workshop","heading":"1 RAP Workshop","text":"document contains examples exercises DHSC Data Science RAP Workshop R. take basic data analysis example can apply RAP template .","code":""},{"path":"plotting-and-calculating-summary-statistics.html","id":"plotting-and-calculating-summary-statistics","chapter":"2 Plotting and calculating summary statistics","heading":"2 Plotting and calculating summary statistics","text":"page take steps data analysis wish . comprise manipulating plotting data generating statistics.","code":""},{"path":"plotting-and-calculating-summary-statistics.html","id":"reading-in-the-data","chapter":"2 Plotting and calculating summary statistics","heading":"2.1 Reading in the data","text":"start reading two libraries:First, can print column names dataset unique industry types dataset.","code":"library(dplyr)\nlibrary(readr)# print columns\nprint(colnames(df))\n\n# print industry types\nprint(unique(df$UnofficialStandardIndustrialClassification))"},{"path":"plotting-and-calculating-summary-statistics.html","id":"filtering-data","chapter":"2 Plotting and calculating summary statistics","heading":"2.2 Filtering data","text":"now clean data filter data health social care industry England type growth rate wish analyse.can set year column number allow plotting data straightforward. Note, “v4_1” column values look plot later.cleaned dataset, can save csv future use.","code":"# remove NAs, filter by industry, geography and growth rate figure\nhealth_gdp_time_series <- df %>%\n  filter(!is.na(v4_1)) %>%\n  filter(UnofficialStandardIndustrialClassification == \"Q: Human health and social work activities\") %>%\n  filter(Geography == \"England\") %>%\n  filter(GrowthRate == \"Annual growth rate\")# set year as a number and sort by\nhealth_gdp_time_series_sorted <- health_gdp_time_series %>%\n  mutate(Time = as.numeric(Time)) %>%\n  arrange(Time)# save data to csv\nwrite_csv(\n  health_gdp_time_series_sorted,\n  file = \"./output/health_gdp_time_series_sorted.csv\")"},{"path":"plotting-and-calculating-summary-statistics.html","id":"plotting-data","chapter":"2 Plotting and calculating summary statistics","heading":"2.3 Plotting data","text":"Now plot data using ggplot2.read ggplot2:set plot - reading DHSC colours, plotting line values set chart labels.save plotIt look like :alt text","code":"library(ggplot2)# plot\n\nggplot(data = df,\n       aes(Time,\n           v4_1,\n           colour = UnofficialStandardIndustrialClassification)) +\n  DHSCcolours::theme_dhsc() +\n  geom_line(linewidth = 1) +\n  geom_point(size = 3) +\n  theme(legend.position=\"none\") +\n  DHSCcolours::scale_colour_dhsc_d() +\n  labs(\n    title = \"Annual growth rate of Human health and social work activities, England\",\n    subtitle = \"2023-2021\",\n    x = \"Year\",\n    y = \"Annual growth rate (%)\") +\n  scale_x_continuous(breaks=seq(2013,2021,1))# save the plot\nggsave(\"./output/health_gdp_chart.svg\",\n         height = 5,\n         width = 10,\n         units=\"in\",\n         dpi=300)"},{"path":"plotting-and-calculating-summary-statistics.html","id":"generating-summary-stats","chapter":"2 Plotting and calculating summary statistics","heading":"2.4 Generating summary stats","text":"Finally, generate summary statistics dataset.calculate various stats:want filter dataset maximum minimum values find year occurred.start creating list now already defined variables maximum minimum mapped string, can print output .e. set max value string “maximum”.loop values, retrieve numerical value, filter dataset pull year figures . print values along average already calculated.gives us basic information dataset.next section, ’ll use techniques perform analysis different dataset, take generate RAP project.","code":"library(dplyr)# get stats\n\nminimum <- min(df$v4_1)\nmaximum <- max(df$v4_1)\naverage <- mean(df$v4_1)stats = list(\"minimum\" = minimum,\n             \"maximum\"= maximum)\n\n# get week values for stats, print\n\nfor (name in names(stats)) {\n  stat_value = stats[[name]]\n\n  year_val <- df %>%\n    filter(v4_1 == stats[[name]]) %>%\n    select(Time) %>%\n    pull\n\n  print(paste(\"the \",name, \"value is\", stat_value, \"(year:\", year_val, \")\"))\n}\n\nprint(paste(\"the average value is\",round(average,1)))"},{"path":"exercise.html","id":"exercise","chapter":"3 Exercise","heading":"3 Exercise","text":"section, ’ll perform analysis new dataset, can taken forward use RAP project.Please complete following tasks:Download clean ONS data Information communication activities annual GDP growth rate England.Download clean ONS data Information communication activities annual GDP growth rate England.Plot time series chart annual growth rate, using DHSC colours.Plot time series chart annual growth rate, using DHSC colours.Establish years lowest highest GDP growth rate values respectively dataset.Establish years lowest highest GDP growth rate values respectively dataset.Calculate mean GDP growth rate value dataset.Calculate mean GDP growth rate value dataset.","code":""},{"path":"exercise-solution.html","id":"exercise-solution","chapter":"4 Exercise solution","heading":"4 Exercise solution","text":"Minimum: -1.4% (2020)Maximum: 12.5% (2018)Average: 7.4%alt text","code":""},{"path":"exercise-solution.html","id":"code","chapter":"4 Exercise solution","heading":"4.1 Code","text":"Data filtering script:Plotting:Summary stats:","code":"library(dplyr)\nlibrary(readr)\n\nfilter_data <- function(df){\n\n  # print columns\n  print(colnames(df))\n\n  # print industry types\n  print(unique(df$UnofficialStandardIndustrialClassification))\n\n  # remove NAs, filter by industry, geography and growth rate figure\n  health_gdp_time_series <- df %>%\n    filter(!is.na(v4_1)) %>%\n    filter(UnofficialStandardIndustrialClassification == \"J: Information and communication\") %>%\n    filter(Geography == \"England\") %>%\n    filter(GrowthRate == \"Annual growth rate\")\n\n  # set year as a number and sort by\n  health_gdp_time_series_sorted <- health_gdp_time_series %>%\n    mutate(Time = as.numeric(Time)) %>%\n    arrange(Time)\n\n  # save data to csv\n  write_csv(\n    health_gdp_time_series_sorted,\n    file = \"./output/info_gdp_time_series_sorted.csv\"\n  )\n\n}\nlibrary(ggplot2)\n\nplot_data <- function(df){\n\n  # plot\n\n  ggplot(data = df,\n         aes(Time,\n             v4_1,\n             colour = UnofficialStandardIndustrialClassification)) +\n    DHSCcolours::theme_dhsc() +\n    geom_line(linewidth = 1) +\n    geom_point(size = 3) +\n    theme(legend.position=\"none\") +\n    DHSCcolours::scale_colour_dhsc_d() +\n    labs(\n      title = \"Annual growth rate of Information and communication activities, England\",\n      subtitle = \"2023-2021\",\n      x = \"Year\",\n      y = \"Annual growth rate (%)\") +\n    scale_x_continuous(breaks=seq(2013,2021,1))\n\n  # save the plot\n  ggsave(\"./output/information_gdp_chart.svg\",\n           height = 5,\n           width = 10,\n           units=\"in\",\n           dpi=300)\n\n}\n\nlibrary(dplyr)\n\n#get summary stats\n\nsummary_stats <- function(df){\n\n  # get stats\n\n  minimum <- min(df$v4_1)\n  maximum <- max(df$v4_1)\n  average <- mean(df$v4_1)\n\n  stats = list(\"minimum\" = minimum,\n               \"maximum\"= maximum)\n\n  # get week values for stats, print\n\n  for (name in names(stats)) {\n    stat_value = stats[[name]]\n\n    year_val <- df %>%\n      filter(v4_1 == stats[[name]]) %>%\n      select(Time) %>%\n      pull\n\n    print(paste(\"the \",name, \"value is\", stat_value, \"(year:\", year_val, \")\"))\n  }\n\n  print(paste(\"the average value is\",round(average,1)))\n\n}"},{"path":"adding-your-project-to-github.html","id":"adding-your-project-to-github","chapter":"5 Adding your project to Github","heading":"5 Adding your project to Github","text":"Now project files, useful add Github collaboration., can follow steps howto.qmd file repository.initial setup done, configure git Github username email.make commit current version project using Git>Commit RStudio. Make sure add comment, “initial commit”.Now, can run snippet code header “Adding GitHub support”, generate private Github repository DHSC organisation.","code":""}]
